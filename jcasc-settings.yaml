rbac:
  readSecrets: true
master:
  initScripts:
    - |
      System.setProperty('org.apache.commons.jelly.tags.fmt.timeZone', 'America/Argentina/Buenos_Aires')
  JCasC:
    defaultConfig: false
    configScripts:
      jenkins-settings: |
        jenkins:
          crumbIssuer:
            standard:
              excludeClientIPFromCrumb: true
          globalNodeProperties:
          - envVars:
              env:
              - key: "GITHUB_URL"
                value: "https://github.com/jcontti"
              - key: "JENKINS_PIPELINES_PROJ"
                value: "k8s-cluster"
          clouds:
          - kubernetes:
              containerCapStr: "10"
              jenkinsTunnel: "jenkins-agent:50000"
              jenkinsUrl: "http://jenkins:8080"
              maxRequestsPerHostStr: "32"
              name: "kubernetes"
              namespace: "jenkins"
              serverUrl: "https://kubernetes.default.svc/"
              skipTlsVerify: true
              templates:
              - containers:
                - name: "jnlp"
                  image: "jenkins/inbound-agent:4.3-6"
                  alwaysPullImage: true
                  command: ""
                  args: ""
                  envVars:
                  - envVar:
                      key: "DOCKER_HOST"
                      value: "tcp://localhost:2375"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "250Mi"
                  livenessProbe:
                    failureThreshold: 0
                    initialDelaySeconds: 0
                    periodSeconds: 0
                    successThreshold: 0
                    timeoutSeconds: 0
                  ttyEnabled: true
                label: "mgmt-slave"
                name: "mgmt-slave"
                namespace: "jenkins"
                volumes:
                - secretVolume:
                    mountPath: "/.kube"
                    secretName: "kubeconfig"
                workspaceVolume:
                  emptyDirWorkspaceVolume:
                    memory: false
                yamlMergeStrategy: "override"
              - containers:
                - name: "jnlp"
                  image: "jenkins/inbound-agent:4.3-6"
                  alwaysPullImage: true
                  command: ""
                  args: ""
                  envVars:
                  - envVar:
                      key: "DOCKER_HOST"
                      value: "tcp://localhost:2375"
                  resourceRequestCpu: "100m"
                  resourceRequestMemory: "250Mi"
                  livenessProbe:
                    failureThreshold: 0
                    initialDelaySeconds: 0
                    periodSeconds: 0
                    successThreshold: 0
                    timeoutSeconds: 0
                  ttyEnabled: true
                - name: "dind"
                  image: "docker:19.03.9-dind"
                  alwaysPullImage: true
                  command: ""
                  args: ""
                  resourceRequestCpu: "400m"
                  resourceRequestMemory: "500Mi"
                  livenessProbe:
                    failureThreshold: 0
                    initialDelaySeconds: 0
                    periodSeconds: 0
                    successThreshold: 0
                    timeoutSeconds: 0
                  privileged: true
                  ttyEnabled: true
                label: "docker-slave"
                name: "docker-slave"
                namespace: "jenkins"
                workspaceVolume:
                  emptyDirWorkspaceVolume:
                    memory: false
                yamlMergeStrategy: "override"
        credentials:
          system:
            domainCredentials:
            - credentials:
              - usernamePassword:
                  id: "GHsvcAccnt"
                  scope: GLOBAL
                  username: "GHsvcAccnt"
                  password: ${CRED_GHSVCACCNT_PASSWD}
                  description: "GitHub service account"
        jobs:
        - script: >
            folder('devops') {
                displayName('Devops')
                description('Folder for Devops utils')
            }
        - script: >
            folder('devops/myapp') {
                displayName('My apps')
                description('Folder for My apps')
            }
        - script: >
            pipelineJob('devops/myapp/jenkins-app') {
              environmentVariables {
                keepBuildVariables(true)
                keepSystemVariables(true)
              }
              definition {
                cpsScm {
                  scm {
                    git {
                      remote {
                        url '\$GITHUB_URL/\$JENKINS_PIPELINES_PROJ.git'
                        credentials 'GHsvcAccnt'
                      }
                      branch ''
                      extensions {}
                    }
                  }
                  scriptPath 'pipelines/my_app_pipeline.groovy'
                }
              }
              logRotator {
                numToKeep(30)
                artifactNumToKeep(30)
              }
            }